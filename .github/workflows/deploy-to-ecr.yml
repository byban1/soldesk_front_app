name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'

jobs:
  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-northeast-2'

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t soldeskweb .
        docker tag soldeskweb:latest $ECR_ADDRESS/soldeskweb:latest
        docker push $ECR_ADDRESS/soldeskweb:latest

    - name: Create Environment File
      run: |
        echo "ECR_ADDRESS=656714748400.dkr.ecr.ap-northeast-2.amazonaws.com" > env
      shell: bash

    - name: Load Environment Variables
      run: |
        source env
        echo "ECR_ADDRESS=$ECR_ADDRESS"
      shell: bash

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Check Node version
      run: node -v

    - name: Build front-end
      run: |
        npm install
        npm run build

    - name: Get image tag (version)
      id: image
      run: |
        VERSION=$(echo ${{ github.sha }} | cut -c1-8)
        echo VERSION=$VERSION
        echo "::set-output name=version::$VERSION"

    - name: Build, tag, and push image to Amazon ECR (Front-end)
      id: image-info
      env:
        ECR_REGISTRY: ${{ env.ECR_ADDRESS }}
        ECR_REPOSITORY: demo-frontend
        IMAGE_TAG: ${{ steps.image.outputs.version }}
      run: |
        echo "::set-output name=ecr_repository::$ECR_REPOSITORY"
        echo "::set-output name=image_tag::$IMAGE_TAG"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

